name: Health Check

on:
  schedule:
    - cron: '*/15 * * * *'  # –ö–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç
  workflow_dispatch:

jobs:
  health-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        server: [1, 2]
    steps:
      - name: Check Server ${{ matrix.server }} Health
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets[format('SERVER{0}_HOST', matrix.server)] }}
          username: ${{ secrets[format('SERVER{0}_USER', matrix.server)] }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "üè• Health check for Server ${{ matrix.server }}"
            
            cd /root/DROSERA || exit 1
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
            if ! docker-compose ps | grep -q "Up"; then
              echo "‚ùå Drosera container is down!"
              exit 1
            fi
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
            if ! netstat -tuln | grep -q ":31313"; then
              echo "‚ùå P2P port 31313 not listening!"
              exit 1
            fi
            
            if ! netstat -tuln | grep -q ":31314"; then
              echo "‚ùå Server port 31314 not listening!"
              exit 1
            fi
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
            ERROR_COUNT=$(docker-compose logs --tail=100 | grep -i "fatal\|panic\|error" | wc -l)
            if [ "$ERROR_COUNT" -gt 10 ]; then
              echo "‚ö†Ô∏è High error count in logs: $ERROR_COUNT"
            fi
            
            echo "‚úÖ Server ${{ matrix.server }} is healthy"

 